@model IEnumerable<MVCHotel.Models.Reservation>

@{
    ViewData["Title"] = "Index";
}


<style>
    th {
        background-color: lightgrey !important;
    }

    /* .pagination .page-item.active .page-link { */
    /*     background-color: #007bff; */
    /*     border-color: #007bff; */
    /*     color: white; */
    /* } */

    /* .pagination .page-item .page-link { */
    /*     color: #007bff; */
    /* } */
</style>


<h1>Hotel Reservations</h1>

<div class="mb-3 d-flex align-items-center">
    <a asp-action="CreateBogusData" id="bogus" class="btn btn-primary px-5 me-2">Create Bogus Data</a>
    <a asp-action="DeleteAll" id="delete" class="btn btn-danger px-5 me-3">Delete All</a>
    <span class="ms-auto fs-3">Number of Records: <strong>@ViewBag.RecordCounts</strong></span>
</div>




<table class="table table-bordered table-hover text-center mb-4">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberGuest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StreetAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AptSuite)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoomType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoomFloor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoomNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalBill)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardExp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardCvc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ArrivalTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeavingTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BreakFast)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lunch)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dinner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cleaning)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Towel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SSurprise)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SupplyStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FoodBill)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberGuest)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AptSuite)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomFloor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalBill)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CardType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CardNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CardExp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CardCvc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArrivalTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeavingTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckIn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BreakFast)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lunch)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dinner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cleaning)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Towel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SSurprise)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupplyStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FoodBill)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>



<div class="mt-4 text-center">
    @if (ViewBag.TotalPages > 1)
    {
        <nav>
            <ul class="pagination justify-content-center">
                <!-- First Page -->
                @if (ViewBag.CurrentPage > 3)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="1">1</a>
                    </li>
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }

                <!-- Page Numbers -->
                @for (int i = Math.Max(1, ViewBag.CurrentPage - 4); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 4); i++)
                {
                    <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }

                <!-- Last Page -->
                @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@ViewBag.TotalPages">@ViewBag.TotalPages</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>


<div class="text-center">
    <form asp-action="Index" method="get">
        <label for="searchPage">Search Page Number</label>
        <input type="text" id="searchPage" name="pageNumber" value="@ViewBag.CurrentPage" class="form-control w-25 d-inline mx-1" />
        <button type="submit" class="btn btn-primary">Go</button>
    </form>
</div>



<script>
    document.getElementById("bogus").addEventListener("click", (event) => {
    var msg = confirm("Are you sure you want to create fake data? (10000 Records)");

    if(msg == false)
        event.preventDefault();
    });


    document.getElementById("delete").addEventListener("click", (event) => {
    var msg = confirm("Are you sure you want to delete all data?");

    if(msg == false)
        event.preventDefault();
    });


    document.forms[0].addEventListener("submit", (event) => {
        const pageInput = document.getElementById("searchPage").value;
        const totalPages = @ViewBag.TotalPages;

        if (isNaN(pageInput) || pageInput < 1 || pageInput > totalPages) {
            alert("Page Not Found");
            event.preventDefault();
        }
    });
</script>


<script>                                        @* change, input, blur *@
    document.getElementById("searchPage").addEventListener("keypress", (event) => {
        @* Dosen't Work as the ex above *@
        @* const pageInput = document.getElementById("searchPage").value; *@
        const pageInput = parseInt(event.target.value, 10);
        const totalPages = @ViewBag.TotalPages;

        if ((isNaN(pageInput) || pageInput < 1 || pageInput > totalPages) && event.key === "Enter") {
            alert("Page Not Found");
            event.preventDefault();
            return;
        }

        else if (event.key === "Enter") {
            window.location.replace(window.location.origin + `/Reservation?pageNumber=${pageInput}`)
        }
    });
</script>


@* <script> *@
@*     var totalPages = @Html.Raw(Json.Serialize(ViewBag.TotalPages)); *@
@* </script> *@
